"use strict";
import { shellUtilities } from "necessary";
import { validateGlobStringOrPattern } from "../../utilities/validate";
import { GLOB_STRING_OR_REGEX_DESCRIPTION } from "../../descriptions";
import { ruleFromStringAnchoredAndDirectory } from "../../utilities/rule";
import { INVALID_GLOB_REGEX_OR_STRING_MESSAGE } from "../../messages";
var prompt = shellUtilities.prompt;
export default function pathRulePromptOperation(proceed, abort, context) {
    var path = context.path, directory = context.directory, anchored = true, description = GLOB_STRING_OR_REGEX_DESCRIPTION, errorMessage = INVALID_GLOB_REGEX_OR_STRING_MESSAGE, initialAnswer = path, validationFunction = function(answer) {
        var valid = validateGlobStringOrPattern(answer, anchored, directory);
        return valid;
    }, options = {
        description: description,
        errorMessage: errorMessage,
        initialAnswer: initialAnswer,
        validationFunction: validationFunction
    };
    prompt(options, function(answer) {
        var valid = answer !== null;
        if (!valid) {
            abort();
            return;
        }
        var string = answer, rule = ruleFromStringAnchoredAndDirectory(string, anchored, directory), pathRule = rule; ///
        Object.assign(context, {
            pathRule: pathRule
        });
        proceed();
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9vcGVyYXRpb24vcHJvbXB0L3BhdGhSdWxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBzaGVsbFV0aWxpdGllcyB9IGZyb20gXCJuZWNlc3NhcnlcIjtcblxuaW1wb3J0IHsgdmFsaWRhdGVHbG9iU3RyaW5nT3JQYXR0ZXJuIH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy92YWxpZGF0ZVwiO1xuaW1wb3J0IHsgR0xPQl9TVFJJTkdfT1JfUkVHRVhfREVTQ1JJUFRJT04gfSBmcm9tIFwiLi4vLi4vZGVzY3JpcHRpb25zXCI7XG5pbXBvcnQgeyBydWxlRnJvbVN0cmluZ0FuY2hvcmVkQW5kRGlyZWN0b3J5IH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9ydWxlXCI7XG5pbXBvcnQgeyBJTlZBTElEX0dMT0JfUkVHRVhfT1JfU1RSSU5HX01FU1NBR0UgfSBmcm9tIFwiLi4vLi4vbWVzc2FnZXNcIjtcblxuY29uc3QgeyBwcm9tcHQgfSA9IHNoZWxsVXRpbGl0aWVzO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwYXRoUnVsZVByb21wdE9wZXJhdGlvbihwcm9jZWVkLCBhYm9ydCwgY29udGV4dCkge1xuICBjb25zdCB7IHBhdGgsIGRpcmVjdG9yeSB9ID0gY29udGV4dCxcbiAgICAgICAgYW5jaG9yZWQgPSB0cnVlLFxuICAgICAgICBkZXNjcmlwdGlvbiA9IEdMT0JfU1RSSU5HX09SX1JFR0VYX0RFU0NSSVBUSU9OLFxuICAgICAgICBlcnJvck1lc3NhZ2UgPSBJTlZBTElEX0dMT0JfUkVHRVhfT1JfU1RSSU5HX01FU1NBR0UsXG4gICAgICAgIGluaXRpYWxBbnN3ZXIgPSBwYXRoLCAgLy8vXG4gICAgICAgIHZhbGlkYXRpb25GdW5jdGlvbiA9IChhbnN3ZXIpID0+IHtcbiAgICAgICAgICBjb25zdCB2YWxpZCA9IHZhbGlkYXRlR2xvYlN0cmluZ09yUGF0dGVybihhbnN3ZXIsIGFuY2hvcmVkLCBkaXJlY3RvcnkpO1xuXG4gICAgICAgICAgcmV0dXJuIHZhbGlkO1xuICAgICAgICB9LFxuICAgICAgICBvcHRpb25zID0ge1xuICAgICAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgICAgIGVycm9yTWVzc2FnZSxcbiAgICAgICAgICBpbml0aWFsQW5zd2VyLFxuICAgICAgICAgIHZhbGlkYXRpb25GdW5jdGlvblxuICAgICAgICB9O1xuXG4gIHByb21wdChvcHRpb25zLCAoYW5zd2VyKSA9PiB7XG4gICAgY29uc3QgdmFsaWQgPSAoYW5zd2VyICE9PSBudWxsKTtcblxuICAgIGlmKCF2YWxpZCkge1xuICAgICAgYWJvcnQoKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHN0cmluZyA9IGFuc3dlciwgIC8vL1xuICAgICAgICAgIHJ1bGUgPSBydWxlRnJvbVN0cmluZ0FuY2hvcmVkQW5kRGlyZWN0b3J5KHN0cmluZywgYW5jaG9yZWQsIGRpcmVjdG9yeSksXG4gICAgICAgICAgcGF0aFJ1bGUgPSBydWxlOyAgLy8vXG5cbiAgICBPYmplY3QuYXNzaWduKGNvbnRleHQsIHtcbiAgICAgIHBhdGhSdWxlXG4gICAgfSk7XG5cbiAgICBwcm9jZWVkKCk7XG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbInNoZWxsVXRpbGl0aWVzIiwidmFsaWRhdGVHbG9iU3RyaW5nT3JQYXR0ZXJuIiwiR0xPQl9TVFJJTkdfT1JfUkVHRVhfREVTQ1JJUFRJT04iLCJydWxlRnJvbVN0cmluZ0FuY2hvcmVkQW5kRGlyZWN0b3J5IiwiSU5WQUxJRF9HTE9CX1JFR0VYX09SX1NUUklOR19NRVNTQUdFIiwicHJvbXB0IiwicGF0aFJ1bGVQcm9tcHRPcGVyYXRpb24iLCJwcm9jZWVkIiwiYWJvcnQiLCJjb250ZXh0IiwicGF0aCIsImRpcmVjdG9yeSIsImFuY2hvcmVkIiwiZGVzY3JpcHRpb24iLCJlcnJvck1lc3NhZ2UiLCJpbml0aWFsQW5zd2VyIiwidmFsaWRhdGlvbkZ1bmN0aW9uIiwiYW5zd2VyIiwidmFsaWQiLCJvcHRpb25zIiwic3RyaW5nIiwicnVsZSIsInBhdGhSdWxlIiwiT2JqZWN0IiwiYXNzaWduIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUVBLFNBQVNBLGNBQWMsUUFBUSxZQUFZO0FBRTNDLFNBQVNDLDJCQUEyQixRQUFRLDJCQUEyQjtBQUN2RSxTQUFTQyxnQ0FBZ0MsUUFBUSxxQkFBcUI7QUFDdEUsU0FBU0Msa0NBQWtDLFFBQVEsdUJBQXVCO0FBQzFFLFNBQVNDLG9DQUFvQyxRQUFRLGlCQUFpQjtBQUV0RSxJQUFNLEFBQUVDLFNBQVdMLGVBQVhLO0FBRVIsZUFBZSxTQUFTQyx3QkFBd0JDLE9BQU8sRUFBRUMsS0FBSyxFQUFFQyxPQUFPO0lBQ3JFLElBQVFDLE9BQW9CRCxRQUFwQkMsTUFBTUMsWUFBY0YsUUFBZEUsV0FDUkMsV0FBVyxNQUNYQyxjQUFjWCxrQ0FDZFksZUFBZVYsc0NBQ2ZXLGdCQUFnQkwsTUFDaEJNLHFCQUFxQixTQUFDQztRQUNwQixJQUFNQyxRQUFRakIsNEJBQTRCZ0IsUUFBUUwsVUFBVUQ7UUFFNUQsT0FBT087SUFDVCxHQUNBQyxVQUFVO1FBQ1JOLGFBQUFBO1FBQ0FDLGNBQUFBO1FBQ0FDLGVBQUFBO1FBQ0FDLG9CQUFBQTtJQUNGO0lBRU5YLE9BQU9jLFNBQVMsU0FBQ0Y7UUFDZixJQUFNQyxRQUFTRCxXQUFXO1FBRTFCLElBQUcsQ0FBQ0MsT0FBTztZQUNUVjtZQUVBO1FBQ0Y7UUFFQSxJQUFNWSxTQUFTSCxRQUNUSSxPQUFPbEIsbUNBQW1DaUIsUUFBUVIsVUFBVUQsWUFDNURXLFdBQVdELE1BQU8sR0FBRztRQUUzQkUsT0FBT0MsTUFBTSxDQUFDZixTQUFTO1lBQ3JCYSxVQUFBQTtRQUNGO1FBRUFmO0lBQ0Y7QUFDRiJ9