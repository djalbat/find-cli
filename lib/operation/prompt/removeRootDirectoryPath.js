"use strict";
import { shellUtilities } from "necessary";
import { validateIndex } from "../../utilities/validate";
import { listRootDirectoryPaths } from "../../operation/listRootDirectoryPaths";
import { REMOVE_ROOT_DIRECTORY_PATH_DESCRIPTION } from "../../descriptions";
import { INVALID_ROOT_DIRECTORY_PATH_INDEX_MESSAGE } from "../../messages";
var prompt = shellUtilities.prompt;
export default function removeRootDirectoryPathPromptOperation(proceed, abort, context) {
    var rootDirectoryPath = context.rootDirectoryPath;
    if (rootDirectoryPath !== null) {
        proceed();
        return;
    }
    var lastIndex = listRootDirectoryPaths();
    if (lastIndex === 0) {
        abort();
        return;
    }
    var description = REMOVE_ROOT_DIRECTORY_PATH_DESCRIPTION, errorMessage = INVALID_ROOT_DIRECTORY_PATH_INDEX_MESSAGE, validationFunction = function(answer) {
        var valid = validateIndex(answer, lastIndex);
        return valid;
    }, options = {
        description: description,
        errorMessage: errorMessage,
        validationFunction: validationFunction
    };
    prompt(options, function(answer) {
        var valid = answer !== null;
        if (!valid) {
            abort();
            return;
        }
        var index = answer; ///
        Object.assign(context, {
            index: index
        });
        proceed();
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9vcGVyYXRpb24vcHJvbXB0L3JlbW92ZVJvb3REaXJlY3RvcnlQYXRoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBzaGVsbFV0aWxpdGllcyB9IGZyb20gXCJuZWNlc3NhcnlcIjtcblxuaW1wb3J0IHsgdmFsaWRhdGVJbmRleCB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvdmFsaWRhdGVcIjtcbmltcG9ydCB7IGxpc3RSb290RGlyZWN0b3J5UGF0aHMgfSBmcm9tIFwiLi4vLi4vb3BlcmF0aW9uL2xpc3RSb290RGlyZWN0b3J5UGF0aHNcIjtcbmltcG9ydCB7IFJFTU9WRV9ST09UX0RJUkVDVE9SWV9QQVRIX0RFU0NSSVBUSU9OIH0gZnJvbSBcIi4uLy4uL2Rlc2NyaXB0aW9uc1wiO1xuaW1wb3J0IHsgSU5WQUxJRF9ST09UX0RJUkVDVE9SWV9QQVRIX0lOREVYX01FU1NBR0UgfSBmcm9tIFwiLi4vLi4vbWVzc2FnZXNcIjtcblxuY29uc3QgeyBwcm9tcHQgfSA9IHNoZWxsVXRpbGl0aWVzO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZW1vdmVSb290RGlyZWN0b3J5UGF0aFByb21wdE9wZXJhdGlvbihwcm9jZWVkLCBhYm9ydCwgY29udGV4dCkge1xuICBjb25zdCB7IHJvb3REaXJlY3RvcnlQYXRoIH0gPSBjb250ZXh0O1xuXG4gIGlmIChyb290RGlyZWN0b3J5UGF0aCAhPT0gbnVsbCkge1xuICAgIHByb2NlZWQoKTtcblxuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IGxhc3RJbmRleCA9IGxpc3RSb290RGlyZWN0b3J5UGF0aHMoKTtcblxuICBpZiAobGFzdEluZGV4ID09PSAwKSB7XG4gICAgYWJvcnQoKTtcblxuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IGRlc2NyaXB0aW9uID0gUkVNT1ZFX1JPT1RfRElSRUNUT1JZX1BBVEhfREVTQ1JJUFRJT04sXG4gICAgICAgIGVycm9yTWVzc2FnZSA9IElOVkFMSURfUk9PVF9ESVJFQ1RPUllfUEFUSF9JTkRFWF9NRVNTQUdFLFxuICAgICAgICB2YWxpZGF0aW9uRnVuY3Rpb24gPSAoYW5zd2VyKSA9PiB7XG4gICAgICAgICAgY29uc3QgdmFsaWQgPSB2YWxpZGF0ZUluZGV4KGFuc3dlciwgbGFzdEluZGV4KTtcblxuICAgICAgICAgIHJldHVybiB2YWxpZDtcbiAgICAgICAgfSwgLy8vXG4gICAgICAgIG9wdGlvbnMgPSB7XG4gICAgICAgICAgZGVzY3JpcHRpb24sXG4gICAgICAgICAgZXJyb3JNZXNzYWdlLFxuICAgICAgICAgIHZhbGlkYXRpb25GdW5jdGlvblxuICAgICAgICB9O1xuXG4gIHByb21wdChvcHRpb25zLCAoYW5zd2VyKSA9PiB7XG4gICAgY29uc3QgdmFsaWQgPSAoYW5zd2VyICE9PSBudWxsKTtcblxuICAgIGlmKCF2YWxpZCkge1xuICAgICAgYWJvcnQoKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGluZGV4ID0gYW5zd2VyOyAvLy9cblxuICAgIE9iamVjdC5hc3NpZ24oY29udGV4dCwge1xuICAgICAgaW5kZXhcbiAgICB9KTtcblxuICAgIHByb2NlZWQoKTtcbiAgfSk7XG59XG4iXSwibmFtZXMiOlsic2hlbGxVdGlsaXRpZXMiLCJ2YWxpZGF0ZUluZGV4IiwibGlzdFJvb3REaXJlY3RvcnlQYXRocyIsIlJFTU9WRV9ST09UX0RJUkVDVE9SWV9QQVRIX0RFU0NSSVBUSU9OIiwiSU5WQUxJRF9ST09UX0RJUkVDVE9SWV9QQVRIX0lOREVYX01FU1NBR0UiLCJwcm9tcHQiLCJyZW1vdmVSb290RGlyZWN0b3J5UGF0aFByb21wdE9wZXJhdGlvbiIsInByb2NlZWQiLCJhYm9ydCIsImNvbnRleHQiLCJyb290RGlyZWN0b3J5UGF0aCIsImxhc3RJbmRleCIsImRlc2NyaXB0aW9uIiwiZXJyb3JNZXNzYWdlIiwidmFsaWRhdGlvbkZ1bmN0aW9uIiwiYW5zd2VyIiwidmFsaWQiLCJvcHRpb25zIiwiaW5kZXgiLCJPYmplY3QiLCJhc3NpZ24iXSwibWFwcGluZ3MiOiJBQUFBO0FBRUEsU0FBU0EsY0FBYyxRQUFRLFlBQVk7QUFFM0MsU0FBU0MsYUFBYSxRQUFRLDJCQUEyQjtBQUN6RCxTQUFTQyxzQkFBc0IsUUFBUSx5Q0FBeUM7QUFDaEYsU0FBU0Msc0NBQXNDLFFBQVEscUJBQXFCO0FBQzVFLFNBQVNDLHlDQUF5QyxRQUFRLGlCQUFpQjtBQUUzRSxJQUFNLEFBQUVDLFNBQVdMLGVBQVhLO0FBRVIsZUFBZSxTQUFTQyx1Q0FBdUNDLE9BQU8sRUFBRUMsS0FBSyxFQUFFQyxPQUFPO0lBQ3BGLElBQU0sQUFBRUMsb0JBQXNCRCxRQUF0QkM7SUFFUixJQUFJQSxzQkFBc0IsTUFBTTtRQUM5Qkg7UUFFQTtJQUNGO0lBRUEsSUFBTUksWUFBWVQ7SUFFbEIsSUFBSVMsY0FBYyxHQUFHO1FBQ25CSDtRQUVBO0lBQ0Y7SUFFQSxJQUFNSSxjQUFjVCx3Q0FDZFUsZUFBZVQsMkNBQ2ZVLHFCQUFxQixTQUFDQztRQUNwQixJQUFNQyxRQUFRZixjQUFjYyxRQUFRSjtRQUVwQyxPQUFPSztJQUNULEdBQ0FDLFVBQVU7UUFDUkwsYUFBQUE7UUFDQUMsY0FBQUE7UUFDQUMsb0JBQUFBO0lBQ0Y7SUFFTlQsT0FBT1ksU0FBUyxTQUFDRjtRQUNmLElBQU1DLFFBQVNELFdBQVc7UUFFMUIsSUFBRyxDQUFDQyxPQUFPO1lBQ1RSO1lBRUE7UUFDRjtRQUVBLElBQU1VLFFBQVFILFFBQVEsR0FBRztRQUV6QkksT0FBT0MsTUFBTSxDQUFDWCxTQUFTO1lBQ3JCUyxPQUFBQTtRQUNGO1FBRUFYO0lBQ0Y7QUFDRiJ9