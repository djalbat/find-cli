"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return migrateConfigurationToVersion_1_2;
    }
});
var _string = /*#__PURE__*/ _interop_require_default(require("../rule/string"));
var _versions = require("../versions");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function migrateConfigurationToVersion_1_2(configuration) {
    var version = _versions.VERSION_1_2;
    var ignoredFilePaths = configuration.ignoredFilePaths, permittedFilePaths = configuration.permittedFilePaths, ignoredDirectoryPaths = configuration.ignoredDirectoryPaths, permittedDirectoryPaths = configuration.permittedDirectoryPaths, ignoredFilePathMatchers = matchersFromPaths(ignoredFilePaths), permittedFilePathMatchers = matchersFromPaths(permittedFilePaths), ignoredDirectoryPathMatchers = matchersFromPaths(ignoredDirectoryPaths), permittedDirectoryPathMatchers = matchersFromPaths(permittedDirectoryPaths);
    configuration = {
        version: version,
        ignoredFilePathMatchers: ignoredFilePathMatchers,
        permittedFilePathMatchers: permittedFilePathMatchers,
        ignoredDirectoryPathMatchers: ignoredDirectoryPathMatchers,
        permittedDirectoryPathMatchers: permittedDirectoryPathMatchers
    };
    return configuration;
}
function matchersFromPaths(paths) {
    var matchers = paths.map(function(path) {
        var matcher;
        var string = path, stringRule = _string.default.fromString(string);
        matcher = stringRule; ///
        var json = matcher.toJSON();
        matcher = json; ///
        return matcher;
    });
    return matchers;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb25maWd1cmF0aW9uL3ZlcnNpb25fMV8yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgU3RyaW5nUnVsZSBmcm9tIFwiLi4vcnVsZS9zdHJpbmdcIjtcblxuaW1wb3J0IHsgVkVSU0lPTl8xXzIgfSBmcm9tIFwiLi4vdmVyc2lvbnNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWlncmF0ZUNvbmZpZ3VyYXRpb25Ub1ZlcnNpb25fMV8yKGNvbmZpZ3VyYXRpb24pIHtcbiAgY29uc3QgdmVyc2lvbiA9IFZFUlNJT05fMV8yO1xuXG4gIGNvbnN0IHsgaWdub3JlZEZpbGVQYXRocywgcGVybWl0dGVkRmlsZVBhdGhzLCBpZ25vcmVkRGlyZWN0b3J5UGF0aHMsIHBlcm1pdHRlZERpcmVjdG9yeVBhdGhzIH0gPSBjb25maWd1cmF0aW9uLFxuICAgICAgICBpZ25vcmVkRmlsZVBhdGhNYXRjaGVycyA9IG1hdGNoZXJzRnJvbVBhdGhzKGlnbm9yZWRGaWxlUGF0aHMpLFxuICAgICAgICBwZXJtaXR0ZWRGaWxlUGF0aE1hdGNoZXJzID0gbWF0Y2hlcnNGcm9tUGF0aHMocGVybWl0dGVkRmlsZVBhdGhzKSxcbiAgICAgICAgaWdub3JlZERpcmVjdG9yeVBhdGhNYXRjaGVycyA9IG1hdGNoZXJzRnJvbVBhdGhzKGlnbm9yZWREaXJlY3RvcnlQYXRocyksXG4gICAgICAgIHBlcm1pdHRlZERpcmVjdG9yeVBhdGhNYXRjaGVycyA9IG1hdGNoZXJzRnJvbVBhdGhzKHBlcm1pdHRlZERpcmVjdG9yeVBhdGhzKTtcblxuICBjb25maWd1cmF0aW9uID0ge1xuICAgIHZlcnNpb24sXG4gICAgaWdub3JlZEZpbGVQYXRoTWF0Y2hlcnMsXG4gICAgcGVybWl0dGVkRmlsZVBhdGhNYXRjaGVycyxcbiAgICBpZ25vcmVkRGlyZWN0b3J5UGF0aE1hdGNoZXJzLFxuICAgIHBlcm1pdHRlZERpcmVjdG9yeVBhdGhNYXRjaGVyc1xuICB9O1xuXG4gIHJldHVybiBjb25maWd1cmF0aW9uO1xufVxuXG5mdW5jdGlvbiBtYXRjaGVyc0Zyb21QYXRocyhwYXRocykge1xuICBjb25zdCBtYXRjaGVycyA9IHBhdGhzLm1hcCgocGF0aCkgPT4ge1xuICAgIGxldCBtYXRjaGVyO1xuXG4gICAgY29uc3Qgc3RyaW5nID0gcGF0aCwgIC8vL1xuICAgICAgICAgIHN0cmluZ1J1bGUgPSBTdHJpbmdSdWxlLmZyb21TdHJpbmcoc3RyaW5nKTtcblxuICAgIG1hdGNoZXIgPSBzdHJpbmdSdWxlOyAgLy8vXG5cbiAgICBjb25zdCBqc29uID0gbWF0Y2hlci50b0pTT04oKTtcblxuICAgIG1hdGNoZXIgPSBqc29uOyAvLy9cblxuICAgIHJldHVybiBtYXRjaGVyO1xuICB9KTtcblxuICByZXR1cm4gbWF0Y2hlcnM7XG59Il0sIm5hbWVzIjpbIm1pZ3JhdGVDb25maWd1cmF0aW9uVG9WZXJzaW9uXzFfMiIsImNvbmZpZ3VyYXRpb24iLCJ2ZXJzaW9uIiwiVkVSU0lPTl8xXzIiLCJpZ25vcmVkRmlsZVBhdGhzIiwicGVybWl0dGVkRmlsZVBhdGhzIiwiaWdub3JlZERpcmVjdG9yeVBhdGhzIiwicGVybWl0dGVkRGlyZWN0b3J5UGF0aHMiLCJpZ25vcmVkRmlsZVBhdGhNYXRjaGVycyIsIm1hdGNoZXJzRnJvbVBhdGhzIiwicGVybWl0dGVkRmlsZVBhdGhNYXRjaGVycyIsImlnbm9yZWREaXJlY3RvcnlQYXRoTWF0Y2hlcnMiLCJwZXJtaXR0ZWREaXJlY3RvcnlQYXRoTWF0Y2hlcnMiLCJwYXRocyIsIm1hdGNoZXJzIiwibWFwIiwicGF0aCIsIm1hdGNoZXIiLCJzdHJpbmciLCJzdHJpbmdSdWxlIiwiU3RyaW5nUnVsZSIsImZyb21TdHJpbmciLCJqc29uIiwidG9KU09OIl0sIm1hcHBpbmdzIjoiQUFBQTs7OzsrQkFNQTs7O2VBQXdCQTs7OzZEQUpEO3dCQUVLOzs7Ozs7QUFFYixTQUFTQSxrQ0FBa0NDLGFBQWE7SUFDckUsSUFBTUMsVUFBVUMscUJBQVc7SUFFM0IsSUFBUUMsbUJBQXlGSCxjQUF6Rkcsa0JBQWtCQyxxQkFBdUVKLGNBQXZFSSxvQkFBb0JDLHdCQUFtREwsY0FBbkRLLHVCQUF1QkMsMEJBQTRCTixjQUE1Qk0seUJBQy9EQywwQkFBMEJDLGtCQUFrQkwsbUJBQzVDTSw0QkFBNEJELGtCQUFrQkoscUJBQzlDTSwrQkFBK0JGLGtCQUFrQkgsd0JBQ2pETSxpQ0FBaUNILGtCQUFrQkY7SUFFekROLGdCQUFnQjtRQUNkQyxTQUFBQTtRQUNBTSx5QkFBQUE7UUFDQUUsMkJBQUFBO1FBQ0FDLDhCQUFBQTtRQUNBQyxnQ0FBQUE7SUFDRjtJQUVBLE9BQU9YO0FBQ1Q7QUFFQSxTQUFTUSxrQkFBa0JJLEtBQUs7SUFDOUIsSUFBTUMsV0FBV0QsTUFBTUUsR0FBRyxDQUFDLFNBQUNDO1FBQzFCLElBQUlDO1FBRUosSUFBTUMsU0FBU0YsTUFDVEcsYUFBYUMsZUFBVSxDQUFDQyxVQUFVLENBQUNIO1FBRXpDRCxVQUFVRSxZQUFhLEdBQUc7UUFFMUIsSUFBTUcsT0FBT0wsUUFBUU0sTUFBTTtRQUUzQk4sVUFBVUssTUFBTSxHQUFHO1FBRW5CLE9BQU9MO0lBQ1Q7SUFFQSxPQUFPSDtBQUNUIn0=